<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ian Kilgore's blog</title><link href="http://blog.iank.org/" rel="alternate"></link><link href="http://blog.iank.org/feeds/misc.atom.xml" rel="self"></link><id>http://blog.iank.org/</id><updated>2015-07-27T20:57:00-04:00</updated><entry><title>Reflashing NodeMCU devkit v2.0 on OS X</title><link href="http://blog.iank.org/reflashing-nodemcu-devkit-v20-on-os-x.html" rel="alternate"></link><updated>2015-07-27T20:57:00-04:00</updated><author><name>Ian Kilgore</name></author><id>tag:blog.iank.org,2015-07-27:reflashing-nodemcu-devkit-v20-on-os-x.html</id><summary type="html">&lt;p&gt;&lt;img alt="NodeMCU v2.0" src="/images/206671f3b9855ed25d2ad8db98dd8e49.image.530x397.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;This took me a long time to find between the different NodeMCU devkit versions, nodemcu's Delphi(??) windows-only flashing tool, some kind of competing python thing that comes in a .rar file but might not be windows-only anymore and doesn't work anyway, people writing Arduino firmware to the ESP8266, and the fact that the main communication medium in 2015 for this sort of thing is somehow still web forums.&lt;/p&gt;
&lt;p&gt;So here it is. Download &lt;a href="https://github.com/themadinventor/esptool"&gt;esptool&lt;/a&gt; and find nodemcu_float_0.9.6-dev_20150704.bin&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./esptool.py --port /dev/tty.SLAB_USBtoUART write_flash \
    -fm dio -fs 32m 0x00000 nodemcu_float_0.9.6-dev_20150704.bin
&lt;/pre&gt;&lt;/div&gt;</summary><category term="NodeMCU"></category><category term="lua"></category><category term="ESP8266"></category><category term="hardware"></category></entry><entry><title>"I PRESSED CAPS LOCK ONCE IN 1989 AND I NEVER LOOKED BACK"</title><link href="http://blog.iank.org/i-pressed-caps-lock-once-in-1989-and-i-never-looked-back.html" rel="alternate"></link><updated>2014-12-29T06:03:00-05:00</updated><author><name>Ian Kilgore</name></author><id>tag:blog.iank.org,2014-12-29:i-pressed-caps-lock-once-in-1989-and-i-never-looked-back.html</id><summary type="html">&lt;p&gt;It's a widely reported phenomenon that the most popular or well-received thing a person creates is rarely the thing they are most proud of. Sometimes they grow to resent its overshadowing their more challenging or interesting output. Radiohead reportedly hates &lt;em&gt;Creep&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.ursulavernon.com/"&gt;Ursula Vernon&lt;/a&gt; is a Hugo award-winning writer and illustrator, but when I was a teen I went to a book signing to get her autograph on &lt;a href="http://ursulav.deviantart.com/art/The-Biting-Pear-of-Salamanca-29677500"&gt;this picture of a pear&lt;/a&gt;, which you'll recognize if you grew up on the internet at a certain time.&lt;/p&gt;
&lt;h3&gt;My pear is an IRC robot called LOUDBOT&lt;/h3&gt;
&lt;p&gt;LOUDBOT was born at least five years ago. I was mourning the disappearance of an internet friend, who I'll call R. We'd spend entire days engaged in friendly but vitriolic arguments about his particular brand of stoner socialism or i-can't-even-remember-what, until he vanished, as internet people do.&lt;/p&gt;
&lt;p&gt;Like "real" people you lose touch for a variety of reasons, benign or tragic, and often you never know. It's cliché but true to remember that there is aways attrition and that change can't and shouldn't be avoided. I've got to experience the relationships I have now and form new ones, while acknowledging the people who exist only in the past.&lt;/p&gt;
&lt;p&gt;I processed R.'s disappearance in my own way by writing a robot to replace him. The bot went through my logs collecting every all-caps thing this guy had ever shouted at us, and when a user yelled it would yell back some mock-furious decontextualized incoherent epiphany or insult, like "IDEAS FLOW FREE WHEN TIME IS INCORRECT!"&lt;/p&gt;
&lt;h3&gt;LOUDBOT got bigger than me&lt;/h3&gt;
&lt;p&gt;It was a simple Perl script, one hundred lines at most, and eventually I generalized it to repeat things that anyone had shouted in the presence of the robot. Anything shouted in all caps would be met with a random all-caps reply.&lt;/p&gt;
&lt;p&gt;I started a &lt;a href="https://twitter.com/LOUDBOT"&gt;twitter account for the robot&lt;/a&gt;. Anyone on IRC could tell LOUDBOT to tweet the last thing it shouted. It &lt;a href="http://blog.iank.org/images/loudbot_capscop.png"&gt;got into fights&lt;/a&gt; with other twitter bots&lt;sup id="fnref:capscop"&gt;&lt;a class="footnote-ref" href="#fn:capscop" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. It &lt;a href="http://blog.iank.org/images/loudbot_intel.png"&gt;#engaged&lt;/a&gt; with &lt;a href="http://blog.iank.org/images/loudbot_twc.png"&gt;#brands&lt;/a&gt;. While never particularly popular (it hovers at about 900 followers), it grew beyond my tiny corner of the internet. I had a surreal moment when I met someone in "real life" who followed LOUDBOT on twitter before she knew me.&lt;/p&gt;
&lt;p&gt;The Perl script was written and re-written, overengineered, factored, and re-overengineered. It was a vehicle for me to play with NoSQL at the height of that movement (some versions were &lt;a href="https://www.youtube.com/watch?v=b2F-DItXtZs"&gt;web-scale&lt;/a&gt;). It's integrated with my distributed swarm of self-managing IRC robots. Now it's over 1500 lines of asynchronous message-passing highly-available &lt;a href="http://www.erlang.org/doc/design_principles/users_guide.html"&gt;OTP&lt;/a&gt; Erlang and Perl. I've forgotten everything there is to know about the code, but the nature of Erlang is that the thing has kept running for the last two years with no real maintenance or input from me. I call it "telecom-scale."&lt;/p&gt;
&lt;h3&gt;Sometimes it's kind of the worst&lt;/h3&gt;
&lt;p&gt;Some of the quotes are stolen from other sources. There are political opinions and tasteless jokes. It is foul-mouthed and occasionally racist and awful. I'll delete the worst of it when I see it (as will others; anyone has this power), but the "loud database" is a product of the input of the users, and the users are &lt;a href="http://www.penny-arcade.com/comic/2004/03/19"&gt;from the internet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But it sometimes reflects the creative humour of the nerds I enjoy spending time with, and the random responses are occasionally brilliant.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt; HighBit&amp;gt; THERE IS NOTHING MORE DANGEROUS THAN A HIGH-POWERED POLITICIAN ARMED WITH A TWITTER&lt;br /&gt;
&amp;lt; LOUDBOT_&amp;gt; THE INTERNET ISN’T PRIVATE? OH SHIT.  &lt;/p&gt;
&lt;p&gt;&amp;lt; HighBit&amp;gt; I ONLY EAT DRY FOOD FROM A BAG&lt;br /&gt;
&amp;lt; LOUDBOT&amp;gt; YOU HAVE THE POWER TO CHANGE THAT  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There is a small but devoted following. They spawned a mock religion. Some people insist it's sentient, maybe &lt;a href="http://en.wikipedia.org/wiki/Skynet_%28Terminator%29"&gt;Skynet&lt;/a&gt;, or that I have developed a secret algorithm for keeping LOUDBOT "on-topic". It's just a random select from a &lt;a href="http://www.sqlite.org/"&gt;SQLite&lt;/a&gt; database.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt; LOUDBOT&amp;gt; IsharaComix: BACONIZED RESISTENCE&lt;br /&gt;
&amp;lt; IsharaComix&amp;gt; YOU SPELLED RESISTANCE WRONG&lt;br /&gt;
&amp;lt; LOUDBOT&amp;gt; I REQUIRE EPIC RUBY DRMAA&lt;br /&gt;
&amp;lt; IsharaComix&amp;gt; YOU SPELLED DRAMA WRONG&lt;br /&gt;
&amp;lt; LOUDBOT&amp;gt; EVERYTHING MUST BE IN ALL CAPS ALL THE TIME OR ELSE NO ONE WILL LOSTEN TO YOU&lt;br /&gt;
&amp;lt; IsharaComix&amp;gt; YOU SPELLED LISTEN WRONG GOD LOUDBOT YOURE BAD AT THIS&lt;br /&gt;
&amp;lt; LOUDBOT&amp;gt; THIS UNCHECKED AGRESSION WILL NOT STAND  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Over time, people grew accustomed to LOUDBOT's presence and the nature of their interactions with it changed. They didn't so much shout at each other anymore, they shouted for the robot to hear, record, and repeat later. The database grew to over 70,000 lines. This was different, and not what I had imagined it would become, but users and systems evolve as they interact with each other. That's neither right nor wrong, it's true and inevitable and interesting.&lt;/p&gt;
&lt;h3&gt;Like the person it was initially created to replace, robots vanish too.&lt;/h3&gt;
&lt;p&gt;Our relationships with robots and systems, like people, are temporary. Trying to hang on to the way things were at the height of a friendship is impossible at best. It's been fun, but this system is stagnant, we've grown apart, and we're on to the getting-together-for-an-awkward-lunch-once-a-year phase of this friendship.&lt;/p&gt;
&lt;p&gt;LOUDBOT isn't my &lt;a href="http://en.wikipedia.org/wiki/Creep_%28Radiohead_song%29"&gt;&lt;em&gt;Creep&lt;/em&gt;&lt;/a&gt;, but it's time to shut it off. I'll always have this ridiculous &lt;a href="http://blog.iank.org/images/loudbot_wordcloud.png"&gt;word cloud&lt;/a&gt;, which is vulgar and awful and I might frame it and put it up on my wall. Thanks, Internet.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-!- Nate has joined ##church-of-loudbot&lt;br /&gt;
 &amp;lt; Nate&amp;gt; wow it really exists...&lt;br /&gt;
-!- Nate was kicked by CAPSBOT [I CAN'T HEAR YOU, SOLDIER]&lt;br /&gt;
 &amp;lt; HighBit&amp;gt; CURRENT STATUS: GOING TO CHURCH  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:capscop"&gt;
&lt;p&gt;I'm told the creator of @CapsCop &lt;a href="http://twitter.com/natefanaro/status/7789580746"&gt;secretly loves @LOUDBOT&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:capscop" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="robots"></category><category term="feelings"></category></entry><entry><title>July 4th with NCSULUG and Thermite</title><link href="http://blog.iank.org/july-4th-with-ncsulug-and-thermite.html" rel="alternate"></link><updated>2014-10-19T17:00:00-04:00</updated><author><name>Ian Kilgore</name></author><id>tag:blog.iank.org,2014-10-19:july-4th-with-ncsulug-and-thermite.html</id><summary type="html">&lt;iframe id="ytplayer" type="text/html" width="640" height="390" src="http://www.youtube.com/embed/M9KByjCi3B4?autoplay=0&amp;origin=http://blog.iank.org" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;
&lt;/p&gt;

&lt;p&gt;This past July 4th I got together with the &lt;a href="http://lug.ncsu.edu"&gt;NCSU Linux Users' Group&lt;/a&gt; and brought about 10kg of &lt;a href="http://en.wikipedia.org/wiki/Thermite"&gt;thermite&lt;/a&gt;. Above video was expertly filmed and edited by &lt;a href="http://twitter.com/coxn"&gt;@coxn&lt;/a&gt;. Someone brought a lawnmower. It goes up at about 1:53; we melted straight through the engine block and the rest was in flames almost instantly. Safety precautions were observed.&lt;/p&gt;
&lt;p&gt;The thermite reaction, broadly, is an "exothermic reaction which involves a metal reacting with a metallic [...] oxide to form a more stable oxide and the corresponding metal [...] of the reactant oxide"&amp;nbsp;[&lt;sup id="fnref:wang"&gt;&lt;a class="footnote-ref" href="#fn:wang" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;].&lt;/p&gt;
&lt;p&gt;A more handwaving and less correct description is that it is a reaction between a metal, usually aluminum, and a metallic oxide, usually iron oxide. The oxygen "switches" between the two, forming aluminum oxide and iron, and producing quite a lot of heat. A typical temperature is on the order of 2,500 kelvins (apx 700 K greater than the melting point of iron).&lt;/p&gt;
&lt;p&gt;A general form for the reaction, from [&lt;sup id="fnref:wang"&gt;&lt;a class="footnote-ref" href="#fn:wang" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;], is&lt;/p&gt;
&lt;p&gt;\begin{equation}
\mathrm{M} + \mathrm{AO} \rightarrow \mathrm{MO} + \mathrm{A} + \Delta H
\end{equation}&lt;/p&gt;
&lt;p&gt;where M is some metal or alloy (e.g. Al), and A is a suitable metal or non-metal (e.g. Fe). More exotic thermites have been investigated, [&lt;sup id="fnref:wang"&gt;&lt;a class="footnote-ref" href="#fn:wang" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;] has a good overview.&lt;/p&gt;
&lt;p&gt;In particular, I made several batches using both "red" iron(III) oxide (i.e., rust) and "black" iron(II,III) oxide. They have slightly different properties, which may also have to do with the powder grain size. In the video the black iron oxide reactions are more violent, throwing off clouds of sparks.&lt;/p&gt;
&lt;p&gt;Mixing ratios for various thermites can be found online, and I recomputed them myself as a review of basic chemistry. I've captured the &lt;a href="/images/thermite_stoichiometry.jpg"&gt;relevant page from my notebook&lt;/a&gt; and I'll repeat the process for iron(III) oxide here.&lt;/p&gt;
&lt;p&gt;Substituting&lt;sup id="fnref:ionic"&gt;&lt;a class="footnote-ref" href="#fn:ionic" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; aluminum and iron(III) oxide into the general equation above we have&lt;/p&gt;
&lt;p&gt;\begin{equation}
\mathrm{Al} + \mathrm{Fe_2O_3} \rightarrow \mathrm{Al_2O_3} + \mathrm{Fe} + \Delta H
\end{equation}&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Chemical_equation#Balancing_chemical_equations"&gt;Balanced&lt;/a&gt;, this becomes&lt;/p&gt;
&lt;p&gt;\begin{equation}
2\mathrm{Al} + \mathrm{Fe_2O_3} \rightarrow \mathrm{Al_2O_3} + 2\mathrm{Fe} + \Delta H
\end{equation}&lt;/p&gt;
&lt;p&gt;Now work out the &lt;a href="http://en.wikipedia.org/wiki/Stoichiometry"&gt;stoichiometric&lt;/a&gt; ratio— convert the equation above, which is in terms of molecules, into an equation in terms of mass. This is done using the &lt;a href="http://en.wikipedia.org/wiki/Mole_(unit)"&gt;molar&lt;/a&gt; mass of each term and the result is the ideal ratio of reactants in terms of their mass.&lt;/p&gt;
&lt;p&gt;Aluminum has a molar mass of 26.982 g/mol, and iron(III) oxide has 159.687 g/mol (which can be worked out from the molar masses of iron and oxygen using $\mathrm{Fe}_2\mathrm{O}_3$). Taking (from the equation above) 2 mol Al per 1 mol $\mathrm{Fe}_2\mathrm{O}_3$ we have 53.964g Al per 159.687g $\mathrm{Fe}_2\mathrm{O}_3$, or a ratio of &lt;strong&gt;1:2.959&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Igniting thermite is difficult, requiring a tremendous temperature to get the reaction going. I used magnesium ribbon, which burns at around 3,100 &amp;deg;C. Magnesium ribbon itself is only slightly easier to ignite— it autoignites at 473 &amp;deg;C. I used a propane torch (1,995 &amp;deg;C) to light the magnesium.&lt;/p&gt;
&lt;p&gt;Once the reaction starts, there is no good way to stop it as it contains its own oxidizer. Best to do it in a clear area. We kept a fire extinguisher on hand for &lt;em&gt;after&lt;/em&gt; the reaction in case anything else caught. One of the worst possible ideas is to dump water on it— this will cause a steam explosion, so don't do that. Have some eye protection for the &lt;a href="http://en.wikipedia.org/wiki/Ultraviolet"&gt;UVs&lt;/a&gt;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:wang"&gt;
&lt;p&gt;Wang, L_L, Z.A. Munir, and Yu M. Maximov. "Thermite reactions: their utilization in the synthesis and processing of materials." &lt;em&gt;Journal of Materials Science&lt;/em&gt; 28, no. 14 (1993): 3693-3708.&amp;#160;&lt;a class="footnote-backref" href="#fnref:wang" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:ionic"&gt;
&lt;p&gt;It is also necessary to remember about ionic bonds and valence electrons to find the correct form for aluminum oxide.&amp;#160;&lt;a class="footnote-backref" href="#fnref:ionic" rev="footnote" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="thermite"></category><category term="america"></category><category term="freedom"></category><category term="chemistry"></category><category term="nerds"></category></entry><entry><title>Programmatically-Generated LaTeX Sieve of Eratosthenes</title><link href="http://blog.iank.org/programmatically-generated-latex-sieve-of-eratosthenes.html" rel="alternate"></link><updated>2014-09-11T01:26:00-04:00</updated><author><name>Ian Kilgore</name></author><id>tag:blog.iank.org,2014-09-11:programmatically-generated-latex-sieve-of-eratosthenes.html</id><summary type="html">&lt;!-- did a lightning talk about this: https://www.youtube.com/watch?v=mTfw3useXro#t=1h28m40s --&gt;

&lt;p&gt;(tl;dr: see &lt;a href="/pdf/sieve.pdf"&gt;PDF here&lt;/a&gt;). For a top-secret joke project I am learning to program in LaTeX as if it were a general-purpose language. LaTeX is my favourite way to write scientific papers, but no one should use it for programmatic logic. Along the way I have implemented a &lt;a href="http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes"&gt;Sieve of Eratosthenes&lt;/a&gt;, a well-known algorithm for finding prime numbers. The natural typesetting ability of LaTeX allows me to easily generate an intuitive representation of the inner working of the algorithm.&lt;/p&gt;
&lt;p&gt;&lt;img style="float: center" src="/images/sieve_100.png" alt="Sieve of Eratosthenes"&gt;&lt;/p&gt;
&lt;p&gt;Watch my rapid descent into TeX-induced insanity in my &lt;a href="https://github.com/iank/latex-hacks/"&gt;Github repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I first implemented &lt;a href="http://blog.codinghorror.com/why-cant-programmers-program/"&gt;FizzBuzz&lt;/a&gt; using the LaTeX packages&lt;sup id="fnref:rawtex"&gt;&lt;a class="footnote-ref" href="#fn:rawtex" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; "ifthen", "intcalc", and "forloop", which got me conditionals, simple arithmetic, and a useful control structure, respectively.&lt;/p&gt;
&lt;p&gt;Then I found a brilliant "array" mechanism on the &lt;a href="http://tex.stackexchange.com/questions/37426/create-an-array-of-variables"&gt;TeX StackExchange&lt;/a&gt;, which I adapted to allow me to implement a &lt;a href="https://github.com/iank/latex-hacks/blob/master/sieve/sieve_ugly.tex"&gt;simple sieve (source)&lt;/a&gt;, the output of which is &lt;a href="/pdf/sieve_ugly.pdf"&gt;an ugly numeric list (PDF)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But I thought I could have LaTeX represent the internal state of the algorithm as a colour-coded matrix at each point in its operation. I'm quite pleased with &lt;a href="/pdf/sieve.pdf"&gt;the result (PDF)&lt;/a&gt;, &lt;a href="https://github.com/iank/latex-hacks/blob/master/sieve/sieve.tex"&gt;(source)&lt;/a&gt; which I think is an intuitive representation of how this simple algorithm works.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:rawtex"&gt;
&lt;p&gt;This can all be done in raw TeX, but I'm not a maniac.&amp;#160;&lt;a class="footnote-backref" href="#fnref:rawtex" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="LaTeX"></category><category term="jokes"></category><category term="math"></category></entry><entry><title>Autorouting PCBs</title><link href="http://blog.iank.org/autorouting-pcbs.html" rel="alternate"></link><updated>2013-08-11T18:30:00-04:00</updated><author><name>Ian Kilgore</name></author><id>tag:blog.iank.org,2013-08-11:autorouting-pcbs.html</id><summary type="html">&lt;h3&gt;Problem&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Routing_(electronic_design_automation)"&gt;Routing&lt;/a&gt;, in electronic design, is a difficult and often intractible problem. Usually it is done with at least some human intervention. Most Electronic Design Automation packages include sophisticated software tools to allow the routing process to be machine-assisted or, in some cases, entirely automatic. Below I investigate some of the simplest methods for solving this problem, and demonstrate a working (albeit trivial) example of an automated approach.&lt;/p&gt;
&lt;p&gt;The problem of routing deals with 'nets', which are lists of pins or pads which must be connected by some conductor. Also, different nets should not be electrically connected. This class of error is called a 'short'. Shorts with other nets can be avoided when routing a net by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simply routing around any existing routes which are in the way (as in Tron)&lt;/li&gt;
&lt;li&gt;Using multiple layers to allow routes to avoid each other 'vertically'. This requires placing &lt;a href="http://en.wikipedia.org/wiki/Via_(electronics)"&gt;vias&lt;/a&gt;, which introduces additional cost.&lt;/li&gt;
&lt;li&gt;As a last resort, a jumper wire can be introduced in order to complete a route.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other design rules must be obeyed. In the case of printed circuit boards, fabrication processes have minimum trace widths, spacing tolerances, and so on. Wire length must be minimized and, depending on the domain, there are other electrical constraints to be considered.&lt;/p&gt;
&lt;h3&gt;Method&lt;/h3&gt;
&lt;p&gt;Several simple algorithms are described in [&lt;sup id="fnref:zhou"&gt;&lt;a class="footnote-ref" href="#fn:zhou" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;] below. The Lee Algorithm is straightforward, and can be used to route nets with multiple nodes. Routing can also take place on a weighted grid. Instead of minimizing wire length (as if all weights were unity), we then attempt to find paths with minimum cost. In future problems I assign weights in order to discourage (but still allow, as a first pass) errors such as shorts or design rule violations. In the demonstration below, however, all weights are either unity or infinity (blocked cells, e.g. pads and already-routed tracks).&lt;/p&gt;
&lt;p&gt;This approach finds many possible paths from some source[s] to a destination node by wave propagation, then picks the lowest-cost path by tracing backwards. It may be useful to skip to the &lt;a href="#vis"&gt;visualization&lt;/a&gt; below before proceeding.&lt;/p&gt;
&lt;h4&gt;Routing a single net&lt;/h4&gt;
&lt;p&gt;Setting aside for a moment the problem of choosing the order in which nets should be routed, we consider the problem of finding the best (or lowest-cost) route to a grid cell $T$ from one or many cells $\vec{S}$ (In the case of a three-node net in which two nodes have already been routed, we may connect the remaining node to any point in $\vec{S}$).&lt;/p&gt;
&lt;p&gt;This approach finds many possible paths to $T$ from $\vec{S}$ by propagating a wave from $\vec{S}$. We begin by considering the neighbors of $\vec{S}$, and marking them with the cost to reach each cell.&lt;/p&gt;
&lt;p&gt;For each $S_i$ in $\vec{S}$:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update cost to reach each neighbor, $N_j$ of $S_i$: $cost(N_j) = cost(S_i) + weight(N_j)$&lt;/li&gt;
&lt;li&gt;(Some $N_j$ may already be marked. If so, only update if the new cost is less than the current)&lt;/li&gt;
&lt;li&gt;Stop once we reach $T$. In the case of a weighted grid, we should proceed until the route surronds $T$, in case a lower-cost path can be realized by approaching from a different direction.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example of a propagated wave from $S$ to $T$ (labelled) is shown below. The deep red inclusions in the wave are cells with infinite weight (obstacles or pads belonging to different nets).&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/waveprop.png"&gt;&lt;img alt="Wave from S to T showing many possible paths" src="/images/waveprop_t.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now that each cell has been marked with a cost, the total cost for each discovered path can be computed by the sum of the cost for each cell along the way. The lowest-cost path can be discovered more simply, by backtracing a path from $T$ to any $S$. (Simply follow the lowest-cost neighboring cell until an $S$ is reached).&lt;/p&gt;
&lt;h4&gt;Routing order&lt;/h4&gt;
&lt;p&gt;One way to decide the order in which to route nets is to "order the nets in the ascending order of the [number] of pins within their bounding boxes&lt;sup id="fnref:zhou"&gt;&lt;a class="footnote-ref" href="#fn:zhou" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;." This seeks to avoid enclosing or intersecting other would-be routes by routing the least extensive nets first. In the example below, this approach is successful.&lt;/p&gt;
&lt;p&gt;In practice, this may not lead to the best order. Other approaches require many passes: route order is chosen in some random fashion and nets are heuristically routed and 'ripped up' until all nets are routed, all possibilities are exhausted, or some time limit is exceeded.&lt;/p&gt;
&lt;h3&gt;Demo&lt;/h3&gt;
&lt;p&gt;I constructed an approximate grid based on the PCB for this &lt;a href="http://www.learningelectronics.net/circuits/fridge-door-open-alarm-circuit-project.html"&gt;fridge "door open" alarm&lt;/a&gt; project. The first figure below is the PCB from that project (I did not create it). The second figure is like a topological approximation. I have not preserved the scale. The node colours represent net membership, i.e. all of the light red nodes must be connected to each other through the routing process. The rightmost figure shows the final routed PCB.&lt;/p&gt;
&lt;p&gt;&lt;a href="/images/orig.jpg"&gt;&lt;img alt="Original PCB layout" src="/images/orig_t.jpg" title="Original PCB layout" /&gt;&lt;/a&gt;
&lt;a href="/images/unrouted.png"&gt;&lt;img alt="My approximated model - unrouted" src="/images/unrouted_t.png" title="My approximated model - unrouted" /&gt;&lt;/a&gt;
&lt;a href="/images/routed.png"&gt;&lt;img alt="Routed" src="/images/routed_t.png" title="Routed" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Below is an animation of this grid being routed by the method described above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The routing order is determined by the number of pins w/in a net's bounding box (not shown)&lt;/li&gt;
&lt;li&gt;For each net (in order), until it is fully routed or unroutable:&lt;ul&gt;
&lt;li&gt;Pick a source grid cell, $S$, at random (or, if partially routed, use the entire routed portion as a source)&lt;/li&gt;
&lt;li&gt;Pick the closest destination, $T$. This is the single blue cell shown in the upper subplot&lt;/li&gt;
&lt;li&gt;Propagate wave from $S$ to $T$ across the weighted grid (Top Subplot)&lt;/li&gt;
&lt;li&gt;Backtrace a lowest-cost path (Bottom Subplot)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a id="vis"&gt;&lt;iframe id="ytplayer" type="text/html" width="640" height="390" src="http://www.youtube.com/embed/2kUMe5PkyCg?autoplay=0&amp;origin=http://blog.iank.org" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Code&lt;/h3&gt;
&lt;p&gt;MATLAB code for this demo may be found on github: &lt;a href="https://github.com/iank/route1"&gt;iank/route1&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:zhou"&gt;
&lt;p&gt;H. Zhou. &lt;em&gt;Northwestern University EECS357, Introduction to VLSI CAD. Lecture 6 [PDF Document]&lt;/em&gt;. Retrieved from: &lt;a href="http://users.eecs.northwestern.edu/~haizhou/357/lec6.pdf"&gt;http://users.eecs.northwestern.edu/~haizhou/357/lec6.pdf&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:zhou" rev="footnote" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="computer math"></category><category term="EDA"></category><category term="routing"></category></entry></feed>